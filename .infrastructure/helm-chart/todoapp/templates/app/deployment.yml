apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-{{.Chart.Name}}
  namespace: {{.Values.common.namespace}}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{.Values.todoapp.rollingUpdate.maxSurge}}
      maxUnavailable: {{.Values.todoapp.rollingUpdate.maxUnavailable}}
  selector:
    matchLabels:
      app: {{.Chart.Name}}
  template:
    metadata:
      labels:
        app: {{.Chart.Name}}
    spec:
      serviceAccountName: {{.Values.common.serviceAccountName}}
      containers:
      - name: {{.Values.todoapp.image.name}}
        image: {{.Values.todoapp.image.repository}}:{{.Values.todoapp.image.version}}
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: app-secrets-volume
          mountPath: "/app/secrets"
          readOnly: true
        - name: app-config-volume
          mountPath: "/app/configs"
          readOnly: true
        resources:
          requests:
            memory: {{.Values.todoapp.resources.requests.memory}}
            cpu: {{.Values.todoapp.resources.requests.cpu}}
          limits:
            memory: {{.Values.todoapp.resources.limits.memory}}
            cpu: {{.Values.todoapp.resources.limits.cpu}}
        env:
        - name: PYTHONUNBUFFERED
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: PYTHONUNBUFFERED
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{.Chart.Name}}-secret
              key: SECRET_KEY
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DB_PASSWORD
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DB_HOST
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: api/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: api/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: pvc-data
      - name: {{.Chart.Name}}-secrets-volume
        secret:
          secretName: {{.Chart.Name}}-secret
      - name: {{.Chart.Name}}-config-volume
        configMap:
          name: {{.Chart.Name}}-config
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: {{.Values.todoapp.nodeAffinity.key}}
                operator: In
                values:
                - {{.Values.todoapp.nodeAffinity.values}}